{"remainingRequest":"/Users/user/Desktop/vueDatav/node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!/Users/user/Desktop/vueDatav/src/views/screen/cpuTop.vue?vue&type=style&index=0&id=64b75434&lang=scss&scoped=true&","dependencies":[{"path":"/Users/user/Desktop/vueDatav/src/views/screen/cpuTop.vue","mtime":1637549300830},{"path":"/Users/user/Desktop/vueDatav/node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Desktop/vueDatav/node_modules/_vue-loader@15.9.8@vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/user/Desktop/vueDatav/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/user/Desktop/vueDatav/node_modules/_sass-loader@9.0.3@sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Desktop/vueDatav/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Desktop/vueDatav/node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmNwdXRvcHsKCWRpc3BsYXk6IGZsZXg7CglmbGV4LWRpcmVjdGlvbjogY29sdW1uOwoJaGVpZ2h0OiAxMDAlOwoJdGV4dC1hbGlnbjogY2VudGVyOwoJLnRvcFRpdGxlewoJCWhlaWdodDogMTAlOwoJCXBhZGRpbmc6IDEwcHg7Cgl9CgkjTGVmdENoYXJ0ewoJCWZsZXg6IDI7Cgl9Cn0K"},{"version":3,"sources":["cpuTop.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"cpuTop.vue","sourceRoot":"src/views/screen","sourcesContent":["<template>\n  <div class=\"cputop\">\n\t  <div class=\"topTitle\" >\n\t  \t<span style=\"color:#5cd9e8\">\n\t  \t\t<svg-icon icon-class=\"alarun\"></svg-icon>\n\t  \t</span>\n\t  \t<span class=\"fs-xl text mx-2\">城市使用率Top10</span>\n\n\t  </div>\n    <div id=\"LeftChart\" style=\"height:100%\"  ></div>\n  </div>\n</template>\n\n<script>\nconst echarts = require(\"echarts\");\nimport api from \"@/http/api\";\nexport default {\n  data() {\n    return {\n      chart: null,\n\t  item:\"\",\n    };\n  },\n  mounted() {\n\t/* this.fetchData(); */\n\tvar category=[\"驻马店\",'南阳','郑州','洛阳','新乡','周口'];\n\tvar data=[10,12,18,20,17,16]\n\tthis.draw(category,data);\n  },\n  methods: {\n\t  fetchData(){\n\t\tapi.summary.cpuTop10() //新接口，所有监控设备的内存 Top10\n\t\t\t.then(response => {\n\t\t\t\tif(response){\n\t\t\t\t\tthis.item=response.itemSingle;\n\t\t\t\t\tlet kdata=[],vdata=[];\n\t\t\t\t\tkdata= Object.keys(this.item);\n\t\t\t\t\tvdata=Object.values(this.item);\n\t\t\t\t\t if(document.getElementById(\"LeftChart\")){\n\t\t\t\t\t\t this.draw(kdata,vdata);\n\t\t\t\t\t\tsetTimeout(this.fetchData,60000);\n\t\t\t\t\t} \n\t\t\t\t}\n\t\t\t}).catch(err=>{\n\t\t\t\tif(document.getElementById(\"LeftChart\")){\n\t\t\t\t\tsetTimeout(this.fetchData,60000);\n\t\t\t\t}\n\t\t\t})  \n\t  },\n\t  \n    draw(category,data) {\n      // 基于准备好的dom，初始化echarts实例\n      this.chart = echarts.init(document.getElementById(\"LeftChart\"));\n      //  ----------------------------------------------------------------\n      let option = {\n        title: {\n          text: \"\",\n          x: \"center\",\n          y: 0,\n          textStyle: {\n            color: \"#B4B4B4\",\n            fontSize: 16,\n            fontWeight: \"normal\"\n          }\n        },\n        tooltip: {\n          trigger: \"axis\",\n          backgroundColor: \"rgba(255,255,255,0.1)\",\n          axisPointer: {\n            type: \"shadow\",\n            label: {\n              show: true,\n              backgroundColor: \"#7B7DDC\"\n            }\n          }\n        },\n        legend: {\n          textStyle: {\n            color: \"#B4B4B4\"\n          },\n          top: \"0%\"\n        },\n        grid: {\n          x: \"11%\",\n          width: \"80%\",\n          y: \"4%\"\n        },\n        xAxis: {\n          data: category,\n          axisLine: {\n            lineStyle: {\n              color: \"#B4B4B4\"\n            }\n          },\n          axisTick: {\n            show: false\n          } \n        },\n        yAxis: [\n       \n          {\n\t\t\t type: 'value',\n            splitLine: { show: false },\n            axisLine: {\n              lineStyle: {\n                color: \"#B4B4B4\"\n              }\n            },\n            axisLabel: {\n              formatter: \"{value} \"\n            }\n          }\n        ],\n        series: [\n          {\n            type: \"line\",\n\t\t\tareaStyle: {}, \n\t\t\t smooth: true,\n            barWidth: 10,\n            itemStyle: {\n              normal: {\n                barBorderRadius: 5,\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n\t\t\t\t  { offset: 0, color: \"#f06371\" },\n\t\t\t\t  { offset: 0.2, color: \"#7979e5\" },\n\t\t\t\t  { offset: 1, color: \"rgba(156,107,211,0.2)\" }//rgba(156,107,211,0.2)\n                ])\n              }\n            },\n            data: data\n          },\n\n         \n        ]\n      };\n\t\n\t   this.chart.setOption(option); \n\t \n    }\n  },\n  destroyed() {\n    window.onresize = null;\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n\t.cputop{\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\theight: 100%;\n\t\ttext-align: center;\n\t\t.topTitle{\n\t\t\theight: 10%;\n\t\t\tpadding: 10px;\n\t\t}\n\t\t#LeftChart{\n\t\t\tflex: 2;\n\t\t}\n\t}\n</style>"]}]}